{
	"functions": [{
			"name": "Create",
			"parameters":[
			    "size"
			],
			"sequential": true,
			"introduction":"Create the array that will contain all the numbers to be sorted",
			"instructions": [
			    {
					"instruction": "Create an array"
				},
				{
					"instruction": "Fill the array with numbers"
				}
			],
			"pseudocode": [
				"int[] numbers",
				"for i:=1:n\n\t numbers[i] = randomNumber"
			],
			"outro":"The created array now contains the elements we have to sort"
		},
		{
			"name": "Partition",
	        "parameters":[
       		    "array",
                "low",
                "high"
            ],
			"sequential": "true",

			"introduction":"Elements less than pivot go to the left and greater than pivot go to right",
			"instructions": [
			    {
					"instruction": "Select the last element as pivot(What's a pivot?)",
					 "blockBehaviour": {
                        "node": "highlight"
                     }

				},
				{
					"instruction": "Mark the start of the array to loop over",
					 "blockBehaviour": {
                        "node": "mark"
                     }
				},
				{
					"instruction": "Mark the first element to start comparison",
					 "blockBehaviour": {
                        "node": "mark"
                      }
				},
				{
					"instruction": "Compare the element with the pivot value",
					"blockBehaviour":{
					    "node":"swap"
					}
				},
				{
					"instruction": "Increment i",
					"blockBehaviour":{
					    "pointer":"increment"
					}

				},
				{
					"instruction": "If the number is less than pivot tap swap"
				},
				{
				    "instruction":"Increment i to move it to the partition position (all numbers left of this are less and all numbers to right are greater)"
				},
				{
				    "instruction": "Move the pivot at the partition position by swapping it with i"
				}
			],
			"pseudocode": [
				"pivot := numbers[hi]",
				"j := low",
				"i := low-1",
				"if numbers[i] < pivot",
				"i:=i+1",
				"swap(numbers[i], numbers[j])",
				"i:=i+1",
				"swap(numbers[i], pivot)"
			],
			"outro":"The array has been partitioned.Pass the array and low, high values to use this function"
		},
		{
			"name": "Swap",
			"parameters":[
                "a",
                "b"
            ],
			"sequential": "true",
		    "introduction":"Swap the positions of two numbers",
			"instructions": [
			    {
					"instruction": "Copy the number into a temporary container"
				},
				{
					"instruction": "Move the first number into the second variable's spot"
				},
				{
					"instruction": "Move the temporary number into the spot of first number"
				}
			],
			"pseudocode": [
				"temp = a",
				"a = b",
				"b = a"
			],
			"outro":"Pass the reference to the numbers to be swapped use Swap function"
		},
		{
		    "name":"QuickSort",
		    "parameters":[
                "array",
                "low",
                "high"
            ],
		    "sequential":"true",
		    "introduction":"The main recursive QuickSort function that sorts the array",
		    "instructions":[
		        {
		            "instruction":"The base case for recursion"
		        },
		        {
		            "instruction":"Partition"
		        },
		        {
		            "instruction":"QuickSort on left half"
		        },
		        {
		            "instruction":"QuickSort on right half"
		        }
		    ],
		    "pseudocode":[
		        "if low < high",
		        "\tp:=partition(array, low, high)",
		        "\tquickSort(array, low, p-1)",
		        "\tquickSort(array, p+1, high)"
		    ],
		    "outro":"The array has been sorted."
		}
	]
}